services:
  web:
    build: .
    volumes:
      - shared_tmp:/app/tmp # Mounts the shared temp volume
    ports:
      - 8000:8000
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; python manage.py runserver 0.0.0.0:8000'
    depends_on:
      - db
      - redis
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    environment:
      - POSTGRES_USER=dj_money
      - POSTGRES_PASSWORD=dj_money
      - POSTGRES_DB=dj_money
      - POSTGRES_HOST_AUTH_METHOD=trust
  celery_worker: # Новый сервис для Celery worker
    build: . # Используем тот же Dockerfile, что и для web
    command: celery -A dj_money worker -l info # Команда для запуска воркера
    volumes: # Монтируем код приложения
      - .:/app # Mounts the project code
      - shared_tmp:/app/tmp # Mounts the shared temp volume
    env_file:
      - .env
    depends_on: # Celery worker зависит от Redis и базы данных
      - redis
      - db
  celery_beat: # Celery Beat
    build: . 
    command: celery -A dj_money beat -l info --scheduler django_celery_beat.schedulers.DatabaseScheduler
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - web 
  flower: # Новый сервис для Flower
    build: .
    command: celery -A dj_money flower --port=5555
    ports:
      - "5555:5555"
    env_file:
      - .env
    depends_on:
      - redis
volumes:
  postgres_data:
  shared_tmp: